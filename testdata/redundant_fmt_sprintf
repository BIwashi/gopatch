-- redundant_fmt_sprintf.patch --
# Replace errors.New(fmt.Sprintf()) with fmt.Errorf()
@@
# comments 5 -
# comments 6 -
@@
# comments 7 -
-import "errors"
-errors.New(fmt.Sprintf(...))
+fmt.Errorf(...)

-- error.in.go --
package patch_examples

import (
	"errors"
	"fmt"
)

func boo() error {
	err := errors.New("test")
	return errors.New(fmt.Sprintf("error: %v", err))
}

func main() {
	fmt.Println(boo())
}

-- error.out.go --
package patch_examples

import (
	"errors"
	"fmt"
)

func boo() error {
	err := errors.New("test")
	return fmt.Errorf("error: %v", err)
}

func main() {
	fmt.Println(boo())
}

-- error.diff --
--- error.go
+++ error.go
@@ -7,7 +7,7 @@
 
 func boo() error {
 	err := errors.New("test")
-	return errors.New(fmt.Sprintf("error: %v", err))
+	return fmt.Errorf("error: %v", err)
 }
 
 func main() {

-- error.diff.stderr --
error.go:Replace errors.New(fmt.Sprintf()) with fmt.Errorf()
